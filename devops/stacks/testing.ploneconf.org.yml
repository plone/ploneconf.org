version: '3.3'

services:

  frontend:
    image: plone/ploneconf-frontend-2023
    environment:
      RAZZLE_INTERNAL_API_PATH: http://backend:8080/Plone
    ports:
    - "3000:3000"
    depends_on:
      - backend
    networks:
    - public
    - testing_ploneconf
    deploy:
      replicas: 2
      labels:
        - traefik.enable=true
        - traefik.docker.network=public
        - traefik.constraint-label=public
        # SERVICE
        - traefik.http.services.testing_ploneconf-frontend.loadbalancer.server.port=3000
        # HOSTS: Main
        - traefik.http.routers.testing_ploneconf-frontend.rule=Host(`testing.ploneconf.org`)
        - traefik.http.routers.testing_ploneconf-frontend.entrypoints=https
        - traefik.http.routers.testing_ploneconf-frontend.tls=true
        - traefik.http.routers.testing_ploneconf-frontend.tls.certresolver=le
        - traefik.http.routers.testing_ploneconf-frontend.service=testing_ploneconf-frontend
        - traefik.http.routers.testing_ploneconf-frontend.middlewares=gzip

  backend:
    image: plone/ploneconf-backend-2023:latest
    environment:
      RELSTORAGE_DSN: "dbname='${DB_NAME:-plone}' user='${DB_USER:-plone}' host='${DB_HOST:-db}' password='${DB_PASSWORD:-plone}'"
    networks:
    - testing_ploneconf
    - public
    deploy:
      replicas: 2
      labels:
        - traefik.enable=true
        - traefik.docker.network=testing_ploneconf
        # SERVICE
        - traefik.http.services.testing_ploneconf-backend.loadbalancer.server.port=8080
        # MIDDLEWARES
        ### ClassicUI Access Authentication
        - traefik.http.middlewares.testing_ploneconf-backend-auth.basicauth.users=ploneconf:$$2y$$05$$OcevCKwZYZeq3svCxoUpKOnuC1NAIe5Ey23ZLVrARBbOQMOJr4nyG
        ### Frontend ++api++ VHM
        - "traefik.http.middlewares.testing_ploneconf-vhm.replacepathregex.regex=^/\\+\\+api\\+\\+($$|/.*)"
        - "traefik.http.middlewares.testing_ploneconf=vhm.replacepathregex.replacement=/VirtualHostBase/https/testing.plone.org/Plone/++api++/VirtualHostRoot/$$1"
        ### Frontend ClassicUI VHM
        - "traefik.http.middlewares.testing_ploneconf-vhm-classicui.replacepathregex.regex=^/ClassicUI($$|/.*)"
        - "traefik.http.middlewares.testing_ploneconf-vhm-classicui.replacepathregex.replacement=/VirtualHostBase/https/testing.plone.org/Plone/VirtualHostRoot/_vh_ClassicUI/$$1"
        # ROUTES
        ## ploneconf.org API
        - traefik.http.routers.testing_ploneconf-backend.rule=Host(`testing.ploneconf.org`) && (PathPrefix(`/++api++`))
        - traefik.http.routers.testing_ploneconf-backend.entrypoints=https
        - traefik.http.routers.testing_ploneconf-backend.tls=true
        - traefik.http.routers.testing_ploneconf-backend.service=testing_ploneconf-backend
        - traefik.http.routers.testing_ploneconf-backend.middlewares=gzip, testing_ploneconf-vhm
        ### ploneconf.org /ClassicUI - protected with basic auth (prevent SEOs from crawl it)
        - traefik.http.routers.testing_ploneconf-classicui.rule=Host(`testing.ploneconf.org`) && (PathPrefix(`/ClassicUI`))
        - traefik.http.routers.testing_ploneconf-classicui.entrypoints=https
        - traefik.http.routers.testing_ploneconf-classicui.tls=true
        - traefik.http.routers.testing_ploneconf-classicui.service=ploneconf_testing-backend
        - traefik.http.routers.testing_ploneconf-classicui.middlewares=gzip,testing_ploneconf-backend-auth,testing_ploneconf-vhm-classicui
networks:
  public:
    external: true
    driver: overlay
  testing_ploneconf:
    driver: overlay
